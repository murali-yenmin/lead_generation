(()=>{var e={};e.id=3095,e.ids=[3095],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12518:e=>{"use strict";e.exports=require("mongodb")},12909:(e,t,r)=>{"use strict";r.d(t,{n:()=>i});var n=r(43205),s=r.n(n);function i(e){try{let t=e.headers.get("authorization");if(!t||!t.startsWith("Bearer "))return{valid:!1};let r=t.split(" ")[1];if(!r)return{valid:!1};let n=s().verify(r,process.env.JWT_SECRET);return{valid:!0,decoded:n}}catch(e){return console.error("JWT verification failed:",e),{valid:!1}}}},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},38772:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>v,routeModule:()=>p,serverHooks:()=>f,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{POST:()=>u});var s=r(96559),i=r(48088),o=r(37719),a=r(32190),l=r(12909),d=r(75745),c=r(12518);async function u(e){try{let t,r=(0,l.n)(e);if(!r.valid||!r.decoded||"string"==typeof r.decoded)return a.NextResponse.json({message:"Unauthorized"},{status:401});let{organizationId:n}=r.decoded;if(!n)return a.NextResponse.json({message:"User is not associated with an organization."},{status:400});let s=(await d.A).db(process.env.MONGODB_DB),i=await s.collection("organizations").findOne({_id:new c.ObjectId(n)});if(!i)return a.NextResponse.json({message:"Organization not found."},{status:404});let o=i.settings?.socialMediaUrl;if(!o)return a.NextResponse.json({message:"Social media webhook path is not configured for this organization."},{status:400});let u=`${process.env.WEBHOOK_URL}/${o}`,p=await e.json(),m=await fetch(u,{method:"POST",headers:{},body:JSON.stringify(p)});if(!m.ok){let e=await m.text();return console.error("n8n webhook error:",e),a.NextResponse.json({error:e},{status:m.status})}let g=await m.text();try{t=JSON.parse(g)}catch{t={message:g||"No response body"}}return a.NextResponse.json(t)}catch(e){return console.error("API error:",e),a.NextResponse.json({error:"Internal Server Error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/n8n/linkedInAIPost/route",pathname:"/api/n8n/linkedInAIPost",filename:"route",bundlePath:"app/api/n8n/linkedInAIPost/route"},resolvedPagePath:"D:\\murali\\AutoPost-n8n-Lead-Generation-tool\\src\\app\\api\\n8n\\linkedInAIPost\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:m,workUnitAsyncStorage:g,serverHooks:f}=p;function v(){return(0,o.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:g})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},75745:(e,t,r)=>{"use strict";let n;r.d(t,{A:()=>d});var s=r(12518),i=r(85665),o=r.n(i);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env");let a=process.env.MONGODB_URI;n=new s.MongoClient(a,{}).connect();let l=["/dashboard","/socialmedia","/email","/google-ads","/users","/settings","/clients"];(async function(){try{let e=await n,t=process.env.MONGODB_DB;if(!t)throw Error("Please define the MONGODB_DB environment variable in .env");let r=e.db(t),i=r.collection("roles"),a=r.collection("users"),d=r.collection("teams"),c=r.collection("organizations");await i.countDocuments()===0&&(await i.insertMany([{name:"Super Admin",description:"Full platform control",level:100,permissions:l},{name:"Admin",description:"Organization-level admin",level:90,permissions:l},{name:"Organization Owner",description:"Manages own org & billing",level:80,permissions:["/dashboard","/socialmedia","/google-ads"]},{name:"Team Manager",description:"Manages a specific team",level:70,permissions:["/dashboard","/socialmedia"]},{name:"Marketer",description:"Social media & campaigns",level:60,permissions:["/socialmedia","/google-ads"]},{name:"Staff",description:"Basic access",level:50,permissions:["/dashboard"]}]),console.log("✅ Default roles seeded."));let u=await i.findOne({name:"Super Admin"});if(!u)throw Error("Super Admin role not found in roles collection.");if(!await a.findOne({email:"yenmin@gmail.com"})){let e=await o().hash("Yenmin@1234#",10);await a.insertOne({_id:new s.ObjectId,name:"Super Admin",email:"yenmin@gmail.com",password:e,roleId:u._id,organizationId:new s.ObjectId("60f6e1b9b3b3b3b3b3b3b3b3"),teamId:null,status:"active",createdAt:new Date,updatedAt:new Date}),console.log("✅ Default Super Admin user created: yenmin@gmail.com")}await c.updateMany({status:{$exists:!1}},{$set:{status:"active"}}),await d.createIndex({name:1,organizationId:1},{unique:!0}),console.log("✅ Team name index created.")}catch(e){if(85===e.code)console.log("Index already exists, skipping creation.");else if(86===e.code)console.log("Index with different options exists, skipping creation.");else throw console.error("❌ Error during DB initialization:",e),e}})().catch(e=>{console.error("DB Initialization failed. The application may not function correctly."),process.exit(1)});let d=n},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[4447,580,5665,3205],()=>r(38772));module.exports=n})();