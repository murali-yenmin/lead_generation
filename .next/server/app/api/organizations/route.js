(()=>{var e={};e.id=146,e.ids=[146],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9442:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>w,routeModule:()=>m,serverHooks:()=>v,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>f});var n={};r.r(n),r.d(n,{GET:()=>u,POST:()=>p});var i=r(96559),a=r(48088),s=r(37719),o=r(32190),d=r(75745),l=r(12909),c=r(12518);async function u(e){let t=(0,l.n)(e);if(!t.valid||!t.decoded||"string"==typeof t.decoded||!t.decoded.roleId)return o.NextResponse.json({message:"Unauthorized"},{status:401});try{let r=(await d.A).db(process.env.MONGODB_DB),{searchParams:n}=new URL(e.url),i=n.get("search"),a=n.get("status"),s=parseInt(n.get("page")||"1",10),l=parseInt(n.get("limit")||"10",10),u=await r.collection("roles").findOne({_id:new c.ObjectId(t.decoded.roleId)}),p={};i&&(p.name={$regex:i,$options:"i"}),a&&"all"!==a&&(p.status=a),u?.name!=="Super Admin"&&t.decoded.organizationId&&(p._id=new c.ObjectId(t.decoded.organizationId));let m=await r.collection("organizations").find(p).skip((s-1)*l).limit(l).sort({createdAt:-1}).toArray(),g=await r.collection("organizations").countDocuments(p);return o.NextResponse.json({organizations:m,totalOrganizations:g},{status:200})}catch(e){return console.error("Error fetching organizations:",e),o.NextResponse.json({message:"Internal Server Error"},{status:500})}}async function p(e){let t=(0,l.n)(e);if(!t.valid||!t.decoded||"string"==typeof t.decoded||!t.decoded.roleId)return o.NextResponse.json({message:"Unauthorized"},{status:401});try{let r=(await d.A).db(process.env.MONGODB_DB),n=r.collection("roles"),i=await n.findOne({_id:new c.ObjectId(t.decoded.roleId)});if(!i)return o.NextResponse.json({message:"Invalid role."},{status:403});if(!["Super Admin","Admin"].includes(i.name))return o.NextResponse.json({message:"Forbidden"},{status:403});let{name:a,domain:s}=await e.json();if(!a||!s)return o.NextResponse.json({message:"Organization name and domain are required."},{status:400});let l=r.collection("organizations");if(await l.findOne({name:a}))return o.NextResponse.json({message:"An organization with this name already exists."},{status:409});let u={name:a,domain:s,status:"active",createdAt:new Date,updatedAt:new Date},p=await l.insertOne(u),m=await l.findOne({_id:p.insertedId});return o.NextResponse.json(m,{status:201})}catch(e){return console.error("Error creating organization:",e),o.NextResponse.json({message:"Internal Server Error"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/organizations/route",pathname:"/api/organizations",filename:"route",bundlePath:"app/api/organizations/route"},resolvedPagePath:"D:\\murali\\lead_generation\\src\\app\\api\\organizations\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:g,workUnitAsyncStorage:f,serverHooks:v}=m;function w(){return(0,s.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:f})}},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12518:e=>{"use strict";e.exports=require("mongodb")},12909:(e,t,r)=>{"use strict";r.d(t,{n:()=>a});var n=r(43205),i=r.n(n);function a(e){try{let t=e.headers.get("authorization");if(!t||!t.startsWith("Bearer "))return{valid:!1};let r=t.split(" ")[1];if(!r)return{valid:!1};let n=i().verify(r,process.env.JWT_SECRET);return{valid:!0,decoded:n}}catch(e){return console.error("JWT verification failed:",e),{valid:!1}}}},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},75745:(e,t,r)=>{"use strict";let n;r.d(t,{A:()=>l});var i=r(12518),a=r(85665),s=r.n(a);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env");let o=process.env.MONGODB_URI;n=new i.MongoClient(o,{}).connect();let d=["/dashboard","/socialmedia","/email","/google-ads","/users","/settings","/clients"];(async function(){try{let e=await n,t=process.env.MONGODB_DB;if(!t)throw Error("Please define the MONGODB_DB environment variable in .env");let r=e.db(t),a=r.collection("roles"),o=r.collection("users"),l=r.collection("teams"),c=r.collection("organizations");await a.countDocuments()===0&&(await a.insertMany([{name:"Super Admin",description:"Full platform control",level:100,permissions:d},{name:"Admin",description:"Organization-level admin",level:90,permissions:d},{name:"Organization Owner",description:"Manages own org & billing",level:80,permissions:["/dashboard","/socialmedia","/google-ads"]},{name:"Team Manager",description:"Manages a specific team",level:70,permissions:["/dashboard","/socialmedia"]},{name:"Marketer",description:"Social media & campaigns",level:60,permissions:["/socialmedia","/google-ads"]},{name:"Staff",description:"Basic access",level:50,permissions:["/dashboard"]}]),console.log("✅ Default roles seeded."));let u=await a.findOne({name:"Super Admin"});if(!u)throw Error("Super Admin role not found in roles collection.");if(!await o.findOne({email:"yenmin@gmail.com"})){let e=await s().hash("Yenmin@1234#",10);await o.insertOne({_id:new i.ObjectId,name:"Super Admin",email:"yenmin@gmail.com",password:e,roleId:u._id,organizationId:new i.ObjectId("60f6e1b9b3b3b3b3b3b3b3b3"),teamId:null,status:"active",createdAt:new Date,updatedAt:new Date}),console.log("✅ Default Super Admin user created: yenmin@gmail.com")}await c.updateMany({status:{$exists:!1}},{$set:{status:"active"}}),await l.createIndex({name:1,organizationId:1},{unique:!0}),console.log("✅ Team name index created.")}catch(e){if(85===e.code)console.log("Index already exists, skipping creation.");else if(86===e.code)console.log("Index with different options exists, skipping creation.");else throw console.error("❌ Error during DB initialization:",e),e}})().catch(e=>{console.error("DB Initialization failed. The application may not function correctly."),process.exit(1)});let l=n},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},96487:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[4447,580,5665,3205],()=>r(9442));module.exports=n})();