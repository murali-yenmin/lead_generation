(()=>{var e={};e.id=7758,e.ids=[7758],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12518:e=>{"use strict";e.exports=require("mongodb")},17520:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>I,routeModule:()=>v,serverHooks:()=>x,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>w});var i={};t.r(i),t.d(i,{POST:()=>g});var s=t(96559),a=t(48088),n=t(37719),o=t(32190),l=t(75745),d=t(85665),c=t.n(d),u=t(43205),p=t.n(u),m=t(12518);async function g(e){try{let{email:r,password:t}=await e.json();if(!r||!t)return o.NextResponse.json({message:"Email and password are required."},{status:400});let i=(await l.A).db(process.env.MONGODB_DB),s=await i.collection("users").findOne({email:r});if(!s||!await c().compare(t,s.password))return o.NextResponse.json({message:"Invalid email or password."},{status:401});if("active"!==s.status)return o.NextResponse.json({message:"Account not activated. Please check your email to verify your account."},{status:403});if(!process.env.JWT_SECRET)throw Error("JWT_SECRET environment variable is not set.");let a=null;s.roleId&&(a=await i.collection("roles").findOne({_id:new m.ObjectId(s.roleId)}));let n=p().sign({id:s._id,email:s.email,roleId:s.roleId,organizationId:s.organizationId,teamId:s.teamId},process.env.JWT_SECRET,{expiresIn:"30d"}),d={id:s._id,name:s.name,email:s.email,roleId:s.roleId,organizationId:s.organizationId,teamId:s.teamId,image:s.image||null,roleName:a?a.name:"N/A",permissions:a?a.permissions:[]};return o.NextResponse.json({message:"Login successful",token:n,expiresIn:"30d",user:d})}catch(e){return console.error("Login API error:",e),o.NextResponse.json({message:"Internal Server Error"},{status:500})}}let v=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"D:\\murali\\lead_generation\\src\\app\\api\\auth\\login\\route.ts",nextConfigOutput:"",userland:i}),{workAsyncStorage:f,workUnitAsyncStorage:w,serverHooks:x}=v;function I(){return(0,n.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:w})}},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},75745:(e,r,t)=>{"use strict";let i;t.d(r,{A:()=>d});var s=t(12518),a=t(85665),n=t.n(a);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env");let o=process.env.MONGODB_URI;i=new s.MongoClient(o,{}).connect();let l=["/dashboard","/socialmedia","/email","/google-ads","/users","/settings","/clients"];(async function(){try{let e=await i,r=process.env.MONGODB_DB;if(!r)throw Error("Please define the MONGODB_DB environment variable in .env");let t=e.db(r),a=t.collection("roles"),o=t.collection("users"),d=t.collection("teams"),c=t.collection("organizations");await a.countDocuments()===0&&(await a.insertMany([{name:"Super Admin",description:"Full platform control",level:100,permissions:l},{name:"Admin",description:"Organization-level admin",level:90,permissions:l},{name:"Organization Owner",description:"Manages own org & billing",level:80,permissions:["/dashboard","/socialmedia","/google-ads"]},{name:"Team Manager",description:"Manages a specific team",level:70,permissions:["/dashboard","/socialmedia"]},{name:"Marketer",description:"Social media & campaigns",level:60,permissions:["/socialmedia","/google-ads"]},{name:"Staff",description:"Basic access",level:50,permissions:["/dashboard"]}]),console.log("✅ Default roles seeded."));let u=await a.findOne({name:"Super Admin"});if(!u)throw Error("Super Admin role not found in roles collection.");if(!await o.findOne({email:"yenmin@gmail.com"})){let e=await n().hash("Yenmin@1234#",10);await o.insertOne({_id:new s.ObjectId,name:"Super Admin",email:"yenmin@gmail.com",password:e,roleId:u._id,organizationId:new s.ObjectId("60f6e1b9b3b3b3b3b3b3b3b3"),teamId:null,status:"active",createdAt:new Date,updatedAt:new Date}),console.log("✅ Default Super Admin user created: yenmin@gmail.com")}await c.updateMany({status:{$exists:!1}},{$set:{status:"active"}}),await d.createIndex({name:1,organizationId:1},{unique:!0}),console.log("✅ Team name index created.")}catch(e){if(85===e.code)console.log("Index already exists, skipping creation.");else if(86===e.code)console.log("Index with different options exists, skipping creation.");else throw console.error("❌ Error during DB initialization:",e),e}})().catch(e=>{console.error("DB Initialization failed. The application may not function correctly."),process.exit(1)});let d=i},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[4447,580,5665,3205],()=>t(17520));module.exports=i})();