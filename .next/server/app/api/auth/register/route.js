(()=>{var e={};e.id=1612,e.ids=[1612],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12518:e=>{"use strict";e.exports=require("mongodb")},21820:e=>{"use strict";e.exports=require("os")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},34631:e=>{"use strict";e.exports=require("tls")},37366:e=>{"use strict";e.exports=require("dns")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},75060:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>b,routeModule:()=>h,serverHooks:()=>y,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>v});var s={};r.r(s),r.d(s,{POST:()=>x});var o=r(96559),a=r(48088),i=r(37719),n=r(32190),d=r(75745),l=r(85665),c=r.n(l),u=r(55511),p=r.n(u),m=r(49526);async function g({to:e,subject:t,html:r}){let s=m.createTransport({service:"gmail",auth:{user:process.env.EMAIL_ADDRESS,pass:process.env.EMAIL_PASS}});await s.sendMail({from:`"Auto Post" <${process.env.EMAIL_ADDRESS}>`,to:e,subject:t,html:r})}async function f({to:e,url:t}){let r=`
    <div style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 40px;">
      <div style="max-width: 600px; margin: 0 auto; background: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.08);">
        
        <!-- Header -->
        <div style="background-color: #1d4ed8; padding: 20px; text-align: center;">
          <h1 style="color: #ffffff; margin: 0; font-size: 22px;">🚀 AutoPost</h1>
        </div>
        
        <!-- Body -->
        <div style="padding: 30px; color: #333333;">
          <p style="font-size: 16px;">Hi there,</p>
          <p style="font-size: 16px; line-height: 1.6;">
            Thanks for registering with <strong>AutoPost</strong>.  
            Please confirm your email address to activate your account and start automating your social media posts.
          </p>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${t}" style="background-color: #1d4ed8; color: #ffffff; padding: 12px 24px; border-radius: 6px; text-decoration: none; font-size: 16px; font-weight: bold;">
              Verify Email
            </a>
          </div>
          
          <p style="font-size: 14px; color: #555;">
            If the button above doesn’t work, copy and paste this link into your browser:  
          </p>
          <p style="font-size: 14px; word-break: break-word; color: #1d4ed8;">
            ${t}
          </p>
        </div>
        
        <!-- Footer -->
        <div style="background: #f3f4f6; padding: 20px; text-align: center; font-size: 12px; color: #666;">
          <p>\xa9 ${new Date().getFullYear()} AutoPost. All rights reserved.</p>
          <p>
            <a href="#" style="color: #1d4ed8; text-decoration: none;">Privacy Policy</a> | 
            <a href="#" style="color: #1d4ed8; text-decoration: none;">Support</a>
          </p>
        </div>
      </div>
    </div>
  `;await g({to:e,subject:"Verify your email address - AutoPost App",html:r})}async function x(e){try{let{name:t,email:r,password:s,organizationName:o}=await e.json();if(!t||!r||!s||!o)return n.NextResponse.json({message:"All fields are required."},{status:400});if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r))return n.NextResponse.json({message:"Invalid email format."},{status:400});if(s.length<8)return n.NextResponse.json({message:"Password must be at least 8 characters long."},{status:400});let a=(await d.A).db(process.env.MONGODB_DB);if(await a.collection("users").findOne({email:r}))return n.NextResponse.json({message:"An account with this email already exists."},{status:409});if(await a.collection("organizations").findOne({name:o}))return n.NextResponse.json({message:"Organization name already taken."},{status:409});let i=await a.collection("roles").findOne({name:"Admin"});if(!i)return console.error("Admin role not found in database."),n.NextResponse.json({message:"Server configuration error."},{status:500});let l=await a.collection("organizations").insertOne({name:o,createdAt:new Date,updatedAt:new Date});if(!l.acknowledged)return n.NextResponse.json({message:"Failed to create organization."},{status:500});let u=await c().hash(s,10),m=p().randomBytes(32).toString("hex"),g=await a.collection("users").insertOne({name:t,email:r,password:u,organizationId:l.insertedId,roleId:i._id,teamId:null,status:"pending",verificationToken:m,createdAt:new Date,updatedAt:new Date});if(!g.acknowledged)return await a.collection("organizations").deleteOne({_id:l.insertedId}),n.NextResponse.json({message:"Failed to create user."},{status:500});let x=`http://localhost:3000/api/auth/verify?token=${m}`;return await f({to:r,url:x}),n.NextResponse.json({message:"User and organization created successfully. Please check your email to verify your account.",userId:g.insertedId,organizationId:l.insertedId},{status:201})}catch(e){return console.error("Registration API error:",e),n.NextResponse.json({message:"Internal Server Error"},{status:500})}}let h=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"D:\\murali\\AutoPost-n8n-Lead-Generation-tool\\src\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:v,serverHooks:y}=h;function b(){return(0,i.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:v})}},75745:(e,t,r)=>{"use strict";let s;r.d(t,{A:()=>l});var o=r(12518),a=r(85665),i=r.n(a);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env");let n=process.env.MONGODB_URI;s=new o.MongoClient(n,{}).connect();let d=["/dashboard","/socialmedia","/email","/google-ads","/users","/settings","/clients"];(async function(){try{let e=await s,t=process.env.MONGODB_DB;if(!t)throw Error("Please define the MONGODB_DB environment variable in .env");let r=e.db(t),a=r.collection("roles"),n=r.collection("users"),l=r.collection("teams"),c=r.collection("organizations");await a.countDocuments()===0&&(await a.insertMany([{name:"Super Admin",description:"Full platform control",level:100,permissions:d},{name:"Admin",description:"Organization-level admin",level:90,permissions:d},{name:"Organization Owner",description:"Manages own org & billing",level:80,permissions:["/dashboard","/socialmedia","/google-ads"]},{name:"Team Manager",description:"Manages a specific team",level:70,permissions:["/dashboard","/socialmedia"]},{name:"Marketer",description:"Social media & campaigns",level:60,permissions:["/socialmedia","/google-ads"]},{name:"Staff",description:"Basic access",level:50,permissions:["/dashboard"]}]),console.log("✅ Default roles seeded."));let u=await a.findOne({name:"Super Admin"});if(!u)throw Error("Super Admin role not found in roles collection.");if(!await n.findOne({email:"yenmin@gmail.com"})){let e=await i().hash("Yenmin@1234#",10);await n.insertOne({_id:new o.ObjectId,name:"Super Admin",email:"yenmin@gmail.com",password:e,roleId:u._id,organizationId:new o.ObjectId("60f6e1b9b3b3b3b3b3b3b3b3"),teamId:null,status:"active",createdAt:new Date,updatedAt:new Date}),console.log("✅ Default Super Admin user created: yenmin@gmail.com")}await c.updateMany({status:{$exists:!1}},{$set:{status:"active"}}),await l.createIndex({name:1,organizationId:1},{unique:!0}),console.log("✅ Team name index created.")}catch(e){if(85===e.code)console.log("Index already exists, skipping creation.");else if(86===e.code)console.log("Index with different options exists, skipping creation.");else throw console.error("❌ Error during DB initialization:",e),e}})().catch(e=>{console.error("DB Initialization failed. The application may not function correctly."),process.exit(1)});let l=s},78335:()=>{},79551:e=>{"use strict";e.exports=require("url")},79646:e=>{"use strict";e.exports=require("child_process")},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4447,580,5665,9526],()=>r(75060));module.exports=s})();